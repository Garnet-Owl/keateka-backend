services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://keateka:${POSTGRES_PASSWORD}@db:5432/keateka_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    volumes:
      - .:/app
    networks:
      - keateka_network

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=keateka
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=keateka_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keateka_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keateka -d keateka_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - keateka_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-db:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=keateka
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=keateka_test_db
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    networks:
      - keateka_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keateka -d keateka_test_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  test_postgres_data:
  redis_data:

networks:
  keateka_network:
    driver: bridge
