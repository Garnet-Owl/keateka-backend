name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: keateka
          POSTGRES_PASSWORD: keateka123
          POSTGRES_DB: keateka_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.6'
        cache: 'pip'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false

    - name: Install dependencies
      run: poetry install

    - name: Run linting
      run: |
        # Check if there are any Python files to lint
        FILES_FOUND=$(find ./app ./tests -type f -name '*.py' | wc -l)
        if [ "$FILES_FOUND" -eq "0" ]; then
          echo "No Python files to lint."
          exit 0
        fi

        # Run linters
        poetry run black ./app ./tests --check
        poetry run flake8 ./app ./tests
        poetry run isort ./app ./tests --check-only

    - name: Run tests
      env:
        DATABASE_URL: postgresql://keateka:keateka123@localhost:5432/keateka_test
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key
        ENVIRONMENT: test
      run: |
        poetry run pytest --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
